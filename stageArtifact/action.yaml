name: 'Stage Artifact'
description: "Copies a JS artifact to the appropriate S3 bucket so that it's available for deployment"
inputs:
  workdir:
    description: 'The directory to work from. Can be relative or absolute'
    default: '.'
  collective:
    description: 'The collective prefix of the S3 bucket'
    required: true
  bucketBase:
    description: 'The base name of the S3 buckets'
    required: true
  artifact:
    description: 'The name of the artifact'
    required: true
  repoOverride:
    description: 'An alternate name for the repo. If not provided the repo name will be extracted from the GITHUB_REPOSITORY variable'
    default: 'unset'
  forceStageToDev:
    description: 'Normally this action will refuse to publish artifacts if it is not running on an SCM branch. To better facilitate testing, you can set this var to "true" in order to publish to the dev environment from a non SCM branch'
    default: 'false'

outputs:
  artifactBucket:
    description: 'The name of the artifact bucket the object was uploaded to'
    value: ${{ steps.stageArtifact.outputs.artifactBucket }}
  branch:
    description: 'The name of the branch'
    value: ${{ steps.stageArtifact.outputs.branch }}
  version:
    description: 'The version of the artifact which was read from package.json'
    value: ${{ steps.stageArtifact.outputs.version }}
  s3Object:
    description: 'The path of the S3 object within the bucket'
    value: ${{ steps.stageArtifact.outputs.s3Object }}
  s3ArtifactUri:
    description: 'The full S3Uri path to the staged artifact'
    value: ${{ steps.stageArtifact.outputs.s3ArtifactUri }}

runs:
  using: 'composite'
  steps:
    - name: Stage Artifact
      id: stageArtifact
      shell: bash
      run: |
        $GITHUB_ACTION_PATH/entrypoint.sh \
          ${{ inputs.workdir }} \
          ${{ inputs.collective }} \
          ${{ inputs.bucketBase }} \
          ${{ inputs.artifact }} \
          ${{ inputs.repoOverride }} \
          ${{ inputs.forceStageToDev }}
